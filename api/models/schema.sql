-- MySQL Script generated by MySQL Workbench
-- Sun May 21 18:01:10 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema rafr
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `rafr` ;

-- -----------------------------------------------------
-- Schema rafr
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `rafr` DEFAULT CHARACTER SET utf8 ;
USE `rafr` ;

-- -----------------------------------------------------
-- Table `rafr`.`subscriptionType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`subscriptionType` ;

CREATE TABLE IF NOT EXISTS `rafr`.`subscriptionType` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`status` ;

CREATE TABLE IF NOT EXISTS `rafr`.`status` (
  `id` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`user` ;

CREATE TABLE IF NOT EXISTS `rafr`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ssoId` MEDIUMTEXT NULL DEFAULT NULL,
  `phoneNumber` VARCHAR(45) NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`productArea`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`productArea` ;

CREATE TABLE IF NOT EXISTS `rafr`.`productArea` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `createdBy` INT UNSIGNED NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_productarea_user_idx` (`createdBy` ASC),
  CONSTRAINT `fk_productarea_user`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`client` ;

CREATE TABLE IF NOT EXISTS `rafr`.`client` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `createdBy` INT UNSIGNED NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_client_user_idx` (`createdBy` ASC),
  CONSTRAINT `fk_client_user`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`role` ;

CREATE TABLE IF NOT EXISTS `rafr`.`role` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(45) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`feature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`feature` ;

CREATE TABLE IF NOT EXISTS `rafr`.`feature` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NULL DEFAULT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  `clientPriority` INT UNSIGNED NOT NULL,
  `targetDate` DATETIME NULL DEFAULT NULL,
  `ticketUrl` VARCHAR(255) NULL DEFAULT NULL,
  `client` INT UNSIGNED NULL DEFAULT NULL,
  `productArea` INT UNSIGNED NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `createdBy` INT UNSIGNED NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_feature_client_idx` (`client` ASC),
  INDEX `fk_feature_proiducatArea_idx` (`productArea` ASC),
  INDEX `fk_feature_status_idx` (`status` ASC),
  INDEX `fk_feature_user_createdBy_idx` (`createdBy` ASC),
  CONSTRAINT `fk_feature_client`
  FOREIGN KEY (`client`)
  REFERENCES `rafr`.`client` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_feature_proiducatArea`
  FOREIGN KEY (`productArea`)
  REFERENCES `rafr`.`productArea` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_feature_status`
  FOREIGN KEY (`status`)
  REFERENCES `rafr`.`status` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_feature_user_createdBy`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`thread`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`thread` ;

CREATE TABLE IF NOT EXISTS `rafr`.`thread` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL DEFAULT NULL,
  `feature` INT UNSIGNED NULL DEFAULT NULL,
  `createdBy` INT UNSIGNED NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_thread_feature_idx` (`feature` ASC),
  INDEX `fk_thread_user_idx` (`createdBy` ASC),
  CONSTRAINT `fk_thread_feature`
  FOREIGN KEY (`feature`)
  REFERENCES `rafr`.`feature` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_thread_user`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`post` ;

CREATE TABLE IF NOT EXISTS `rafr`.`post` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `content` MEDIUMTEXT NULL DEFAULT NULL,
  `thread` INT UNSIGNED NULL DEFAULT NULL,
  `user` INT UNSIGNED NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_post_thread_idx` (`thread` ASC),
  INDEX `fk_post_user_idx` (`user` ASC),
  CONSTRAINT `fk_post_thread`
  FOREIGN KEY (`thread`)
  REFERENCES `rafr`.`thread` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_post_user`
  FOREIGN KEY (`user`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`subscription` ;

CREATE TABLE IF NOT EXISTS `rafr`.`subscription` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` INT UNSIGNED NULL DEFAULT NULL,
  `thread` INT UNSIGNED NULL DEFAULT NULL,
  `user` INT UNSIGNED NULL DEFAULT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_subscription_subscriptionType_idx` (`type` ASC),
  INDEX `fk_subscription_thread_idx` (`thread` ASC),
  INDEX `fk_subscription_user_idx` (`user` ASC),
  CONSTRAINT `fk_subscription_subscriptionType`
  FOREIGN KEY (`type`)
  REFERENCES `rafr`.`subscriptionType` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subscription_user`
  FOREIGN KEY (`user`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subscription_thread`
  FOREIGN KEY (`thread`)
  REFERENCES `rafr`.`thread` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`userRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`userRole` ;

CREATE TABLE IF NOT EXISTS `rafr`.`userRole` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user` INT UNSIGNED NULL DEFAULT NULL,
  `role` INT UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `d_UNIQUE` (`id` ASC),
  INDEX `fk_userRole_user_idx` (`user` ASC),
  INDEX `fk_userRole_role_idx` (`role` ASC),
  CONSTRAINT `fk_userRole_user`
  FOREIGN KEY (`user`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_userRole_role`
  FOREIGN KEY (`role`)
  REFERENCES `rafr`.`role` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

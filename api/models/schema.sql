-- MySQL Script generated by MySQL Workbench
-- Thu May 18 21:52:18 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema rafr
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema rafr
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `rafr` DEFAULT CHARACTER SET utf8 ;
USE `rafr` ;

-- -----------------------------------------------------
-- Table `rafr`.`subscriptionType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`subscriptionType` ;

CREATE TABLE IF NOT EXISTS `rafr`.`subscriptionType` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`status` ;

CREATE TABLE IF NOT EXISTS `rafr`.`status` (
  `id` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`user` ;

CREATE TABLE IF NOT EXISTS `rafr`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ssoId` MEDIUMTEXT NULL,
  `phoneNumber` VARCHAR(45) NULL,
  `email` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`productArea`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`productArea` ;

CREATE TABLE IF NOT EXISTS `rafr`.`productArea` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `createdBy` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_productarea_user_idx` (`createdBy` ASC),
  CONSTRAINT `fk_productarea_user`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`client` ;

CREATE TABLE IF NOT EXISTS `rafr`.`client` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `createdBy` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_client_user_idx` (`createdBy` ASC),
  CONSTRAINT `fk_client_user`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`role` ;

CREATE TABLE IF NOT EXISTS `rafr`.`role` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`feature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`feature` ;

CREATE TABLE IF NOT EXISTS `rafr`.`feature` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NULL,
  `description` MEDIUMTEXT NULL,
  `clientPriority` INT UNSIGNED NOT NULL,
  `targetDate` DATETIME NULL,
  `ticketUrl` VARCHAR(255) NULL,
  `client` INT UNSIGNED NULL,
  `productArea` INT UNSIGNED NULL,
  `status` VARCHAR(45) NULL,
  `createdBy` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_feature_client_idx` (`client` ASC),
  INDEX `fk_feature_proiducatArea_idx` (`productArea` ASC),
  INDEX `fk_feature_status_idx` (`status` ASC),
  INDEX `fk_feature_user_createdBy_idx` (`createdBy` ASC),
  CONSTRAINT `fk_feature_client`
  FOREIGN KEY (`client`)
  REFERENCES `rafr`.`client` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_feature_proiducatArea`
  FOREIGN KEY (`productArea`)
  REFERENCES `rafr`.`productArea` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_feature_status`
  FOREIGN KEY (`status`)
  REFERENCES `rafr`.`status` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_feature_user_createdBy`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`thread`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`thread` ;

CREATE TABLE IF NOT EXISTS `rafr`.`thread` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `feature` INT UNSIGNED NULL,
  `createdBy` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_thread_feature_idx` (`feature` ASC),
  INDEX `fk_thread_user_idx` (`createdBy` ASC),
  CONSTRAINT `fk_thread_feature`
  FOREIGN KEY (`feature`)
  REFERENCES `rafr`.`feature` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_thread_user`
  FOREIGN KEY (`createdBy`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`post` ;

CREATE TABLE IF NOT EXISTS `rafr`.`post` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `content` MEDIUMTEXT NULL,
  `thread` INT UNSIGNED NULL,
  `user` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_post_thread_idx` (`thread` ASC),
  INDEX `fk_post_user_idx` (`user` ASC),
  CONSTRAINT `fk_post_thread`
  FOREIGN KEY (`thread`)
  REFERENCES `rafr`.`thread` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_post_user`
  FOREIGN KEY (`user`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`subscription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`subscription` ;

CREATE TABLE IF NOT EXISTS `rafr`.`subscription` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` INT UNSIGNED NULL,
  `thread` INT UNSIGNED NULL,
  `user` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_subscription_subscriptionType_idx` (`type` ASC),
  INDEX `fk_subscription_thread_idx` (`thread` ASC),
  INDEX `fk_subscription_user_idx` (`user` ASC),
  CONSTRAINT `fk_subscription_subscriptionType`
  FOREIGN KEY (`type`)
  REFERENCES `rafr`.`subscriptionType` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subscription_user`
  FOREIGN KEY (`user`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subscription_thread`
  FOREIGN KEY (`thread`)
  REFERENCES `rafr`.`thread` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rafr`.`userRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rafr`.`userRole` ;

CREATE TABLE IF NOT EXISTS `rafr`.`userRole` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user` INT UNSIGNED NULL,
  `role` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `d_UNIQUE` (`id` ASC),
  INDEX `fk_userRole_user_idx` (`user` ASC),
  INDEX `fk_userRole_role_idx` (`role` ASC),
  CONSTRAINT `fk_userRole_user`
  FOREIGN KEY (`user`)
  REFERENCES `rafr`.`user` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_userRole_role`
  FOREIGN KEY (`role`)
  REFERENCES `rafr`.`role` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
  ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `rafr`.`subscriptionType`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`subscriptionType` (`id`, `type`) VALUES (1, 'Email');
INSERT INTO `rafr`.`subscriptionType` (`id`, `type`) VALUES (2, 'SMS');

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`status`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`status` (`id`, `status`) VALUES ('OPEN', 'Open');
INSERT INTO `rafr`.`status` (`id`, `status`) VALUES ('CLOSED', 'Closed');

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`user` (`id`, `ssoId`, `phoneNumber`, `email`) VALUES (1, NULL, '0000000000', 'this@isfake.com');
INSERT INTO `rafr`.`user` (`id`, `ssoId`, `phoneNumber`, `email`) VALUES (2, NULL, '0000000000', 'this@isfake.com');
INSERT INTO `rafr`.`user` (`id`, `ssoId`, `phoneNumber`, `email`) VALUES (3, NULL, '0000000000', 'this@isfake.com');
INSERT INTO `rafr`.`user` (`id`, `ssoId`, `phoneNumber`, `email`) VALUES (4, NULL, '0000000000', 'this@isfake.com');
INSERT INTO `rafr`.`user` (`id`, `ssoId`, `phoneNumber`, `email`) VALUES (5, NULL, '0000000000', 'this@isfake.com');
INSERT INTO `rafr`.`user` (`id`, `ssoId`, `phoneNumber`, `email`) VALUES (6, NULL, '0000000000', 'this@isfake.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`productArea`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`productArea` (`id`, `name`, `createdBy`) VALUES (1, 'Product', 1);
INSERT INTO `rafr`.`productArea` (`id`, `name`, `createdBy`) VALUES (2, 'Billing', 1);
INSERT INTO `rafr`.`productArea` (`id`, `name`, `createdBy`) VALUES (3, 'Claims', 1);
INSERT INTO `rafr`.`productArea` (`id`, `name`, `createdBy`) VALUES (4, 'Reports', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`client`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`client` (`id`, `name`, `createdBy`) VALUES (1, 'Client A', NULL);
INSERT INTO `rafr`.`client` (`id`, `name`, `createdBy`) VALUES (2, 'Client B', NULL);
INSERT INTO `rafr`.`client` (`id`, `name`, `createdBy`) VALUES (3, 'Client C', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`role` (`id`, `role`) VALUES (1, 'Admin');
INSERT INTO `rafr`.`role` (`id`, `role`) VALUES (2, 'Regular User');

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`feature`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`feature` (`id`, `title`, `description`, `clientPriority`, `targetDate`, `ticketUrl`, `client`, `productArea`, `status`, `createdBy`) VALUES (1, 'Test Feature 1', 'This is a test feature', 1, '2018-05-17 00:39:36', 'http://not.a.fake.address/seriously-this-is-real', 1, 1, 'OPEN', 1);
INSERT INTO `rafr`.`feature` (`id`, `title`, `description`, `clientPriority`, `targetDate`, `ticketUrl`, `client`, `productArea`, `status`, `createdBy`) VALUES (2, 'Test Feature 2', 'This is a test feature', 1, '2018-05-17 00:39:36', 'http://not.a.fake.address/seriously-this-is-real', 2, 2, 'CLOSED', 1);
INSERT INTO `rafr`.`feature` (`id`, `title`, `description`, `clientPriority`, `targetDate`, `ticketUrl`, `client`, `productArea`, `status`, `createdBy`) VALUES (3, 'Test Feature 3', 'This is a test feature', 2, '2018-05-17 00:39:36', 'http://not.a.fake.address/seriously-this-is-real', 2, 3, 'OPEN', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`thread`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`thread` (`id`, `name`, `feature`, `createdBy`) VALUES (1, 'T1 For F1', 1, 1);
INSERT INTO `rafr`.`thread` (`id`, `name`, `feature`, `createdBy`) VALUES (2, 'T2 For F1', 1, 1);
INSERT INTO `rafr`.`thread` (`id`, `name`, `feature`, `createdBy`) VALUES (3, 'T1 For F2', 2, 1);
INSERT INTO `rafr`.`thread` (`id`, `name`, `feature`, `createdBy`) VALUES (4, 'T2 For F2', 2, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`post`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`post` (`id`, `content`, `thread`, `user`) VALUES (1, 'Test content', 1, 1);
INSERT INTO `rafr`.`post` (`id`, `content`, `thread`, `user`) VALUES (2, 'Test content', 1, 1);
INSERT INTO `rafr`.`post` (`id`, `content`, `thread`, `user`) VALUES (3, 'Test content', 2, 1);
INSERT INTO `rafr`.`post` (`id`, `content`, `thread`, `user`) VALUES (4, 'Test content', 2, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`subscription`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`subscription` (`id`, `type`, `thread`, `user`) VALUES (1, 1, 1, 1);
INSERT INTO `rafr`.`subscription` (`id`, `type`, `thread`, `user`) VALUES (2, 2, 1, 1);
INSERT INTO `rafr`.`subscription` (`id`, `type`, `thread`, `user`) VALUES (3, 1, 2, 1);
INSERT INTO `rafr`.`subscription` (`id`, `type`, `thread`, `user`) VALUES (4, 2, 2, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `rafr`.`userRole`
-- -----------------------------------------------------
START TRANSACTION;
USE `rafr`;
INSERT INTO `rafr`.`userRole` (`id`, `user`, `role`) VALUES (1, 1, 1);
INSERT INTO `rafr`.`userRole` (`id`, `user`, `role`) VALUES (2, 2, 1);
INSERT INTO `rafr`.`userRole` (`id`, `user`, `role`) VALUES (3, 3, 1);
INSERT INTO `rafr`.`userRole` (`id`, `user`, `role`) VALUES (4, 4, 2);
INSERT INTO `rafr`.`userRole` (`id`, `user`, `role`) VALUES (5, 5, 2);
INSERT INTO `rafr`.`userRole` (`id`, `user`, `role`) VALUES (6, 6, 2);

COMMIT;

